/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala library project to get you started.
 * For more details take a look at the Scala plugin chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.7/userguide/scala_plugin.html
 */
plugins {
    
}

group 'com.test.load'
version '1.0'

apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'

compileScala {
    scalaCompileOptions.encoding = 'Cp1252'
}
 
sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

dependencies {
    // Use Scala 2.11 in our library project
    
    compile 'org.mongodb.spark:mongo-spark-connector_2.11:2.4.0'
   // compile 'com.microsoft.azure:azure-cosmosdb-spark_2.4.0_2.11:1.4.0'
    compile 'org.apache.spark:spark-core_2.11:2.2.0'
    compile 'org.apache.spark:spark-sql_2.11:2.2.0'
    compile 'org.scala-lang:scala-library:2.11.11'  
    compile 'org.apache.avro:avro-compiler:1.8.2'
    compile 'com.typesafe:config:1.3.1'
    //compile 'com.commercehub.gradle.plugin:gradle-avro-plugin:0.10.0'

    // Use Scalatest for testing our library
    testCompile 'junit:junit:4.12'
    testCompile 'org.scalatest:scalatest_2.11:3.0.5'

    // Need scala-xml at test runtime
    testRuntime 'org.scala-lang.modules:scala-xml_2.11:1.0.6'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    mavenLocal()
}
/*
avro {
    fieldVisibility = "PRIVATE"
}

task copySource(type: Copy){
    from './build/generated-main-avro-java/com/bcp/negative' 
    into './src/main/scala/com/bcp/negative/schema'
}

compileJava.dependsOn copySource*/

/*jar {
    classifier = 'all'
    archiveName = "CargaDiaria-spark.jar"
    manifest {
        attributes 'Main-Class': 'com.bcp.negative.CargaDiaria'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    zip64 true
}*/
